{"ast":null,"code":"var _jsxFileName = \"/Users/maksimkaplun/\\u0432\\u0435\\u0431-\\u0440\\u043E\\u0437\\u0440\\u043E\\u0431\\u043A\\u0430/react/react_app/src/pages/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getPageCount } from \"../utils/pages\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport ButtonOne from \"../components/UI/button/ButtonOne\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport PostList from \"../components/PostList\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../components/API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPost(response.data);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, []);\n\n  const createPost = newPost => {\n    setPost([...post, newPost]);\n    setModal(false);\n  };\n\n  const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query); // получаємо пост з дочірнього елемента\n\n  const removePost = delPost => {\n    setPost(post.filter(p => p.id !== delPost.id));\n  };\n\n  const changePage = page => {\n    setPage(page);\n    fetchPosts(limit, page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonOne, {\n      onClick: () => setModal(true),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error: $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      post: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u0438 \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"o8iGYkxveFAMM6/o7QfvLd4V+E4=\", false, function () {\n  return [useFetching, usePosts];\n});\n\n_c = Posts;\n;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/pages/Posts.jsx"],"names":["React","useEffect","useState","getPageCount","usePosts","ButtonOne","PostForm","PostFilter","Pagination","Loader","PostList","MyModal","useFetching","PostService","Posts","post","setPost","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","sortedAndSearchedPosts","removePost","delPost","p","id","changePage","margin","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {getPageCount} from \"../utils/pages\";\nimport {usePosts} from \"../hooks/usePosts\";\nimport ButtonOne from \"../components/UI/button/ButtonOne\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport PostList from \"../components/PostList\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../components/API/PostService\";\n\n\nfunction Posts() {\n    const [post, setPost] = useState([])\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    const [modal, setModal] = useState(false)\n    const [totalPages, setTotalPages] = useState(0);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n        const response = await PostService.getAll(limit, page);\n        setPost(response.data)\n        const totalCount = response.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit));\n    })\n\n    useEffect(() => {\n        fetchPosts(limit, page)\n    }, [])\n\n    const createPost = (newPost) => {\n        setPost([...post, newPost])\n        setModal(false)\n    }\n    const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query)\n    // получаємо пост з дочірнього елемента\n    const removePost = (delPost) => {\n        setPost(post.filter(p => p.id !== delPost.id))\n    }\n    const changePage = (page) => {\n        setPage(page)\n        fetchPosts(limit, page)\n    }\n    return (\n        <div className=\"App\">\n            <ButtonOne onClick={() => setModal(true)}>\n                Create\n            </ButtonOne>\n            <MyModal visible={modal} setVisible = {setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {postError &&\n            <h1>Error: ${postError}</h1>\n            }\n            {isPostsLoading\n                ? <div style={{display: 'flex', justifyContent: 'center'}}><Loader/></div>\n                : <PostList remove={removePost} post={sortedAndSearchedPosts} title='Пости про JS'/>\n            }\n            <Pagination\n                page={page}\n                changePage={changePage}\n                totalPages={totalPages}\n            />\n        </div>\n    );\n};\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}