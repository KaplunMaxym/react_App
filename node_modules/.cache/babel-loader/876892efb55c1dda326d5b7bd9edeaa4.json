{"ast":null,"code":"var _jsxFileName = \"/Users/maksimkaplun/\\u0432\\u0435\\u0431-\\u0440\\u043E\\u0437\\u0440\\u043E\\u0431\\u043A\\u0430/react/react_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport { usePosts } from \"./hooks/usePosts\";\nimport PostService from \"./components/API/PostService\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport { useFetching } from \"./hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPost(response.data);\n    console.log(response.headers['x-total-count']);\n    setTotalPages(response.headers['x-total-count']);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const createPost = newPost => {\n    setPost([...post, newPost]);\n    setModal(false);\n  };\n\n  const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query); // получаємо пост з дочірнього елемента\n\n  const removePost = delPost => {\n    setPost(post.filter(p => p.id !== delPost.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonOne, {\n      onClick: () => setModal(true),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error: $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      post: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u0438 \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"o8iGYkxveFAMM6/o7QfvLd4V+E4=\", false, function () {\n  return [useFetching, usePosts];\n});\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/App.js"],"names":["React","useEffect","useState","PostList","ButtonOne","PostForm","PostFilter","MyModal","usePosts","PostService","Loader","useFetching","App","post","setPost","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","fetchPosts","isPostsLoading","postError","response","getAll","data","console","log","headers","createPost","newPost","sortedAndSearchedPosts","removePost","delPost","p","id","margin","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport {usePosts} from \"./hooks/usePosts\";\nimport PostService from \"./components/API/PostService\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport {useFetching} from \"./hooks/useFetching\";\n\nfunction App() {\n    const [post, setPost] = useState([])\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    const [modal, setModal] = useState(false)\n    const [totalPages, setTotalPages] = useState(0);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n        const response = await PostService.getAll(limit, page);\n        setPost(response.data)\n        console.log(response.headers['x-total-count'])\n        setTotalPages(response.headers['x-total-count'])\n    })\n\n    useEffect(() => {\n        fetchPosts()\n    }, [])\n\n    const createPost = (newPost) => {\n        setPost([...post, newPost])\n        setModal(false)\n    }\n    const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query)\n    // получаємо пост з дочірнього елемента\n    const removePost = (delPost) => {\n        setPost(post.filter(p => p.id !== delPost.id))\n    }\n\n    return (\n        <div className=\"App\">\n            <ButtonOne onClick={() => setModal(true)}>\n                Create\n            </ButtonOne>\n            <MyModal visible={modal} setVisible = {setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {postError &&\n                <h1>Error: ${postError}</h1>\n            }\n            {isPostsLoading\n                ? <div style={{display: 'flex', justifyContent: 'center'}}><Loader/></div>\n                : <PostList remove={removePost} post={sortedAndSearchedPosts} title='Пости про JS'/>\n            }\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}