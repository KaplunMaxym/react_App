{"ast":null,"code":"var _jsxFileName = \"/Users/maksimkaplun/\\u0432\\u0435\\u0431-\\u0440\\u043E\\u0437\\u0440\\u043E\\u0431\\u043A\\u0430/react/react_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport Counter from \"./components/Conter\";\nimport ClassCounter from \"./components/ClassCounter\";\nimport './styles/App.css';\nimport PostItem from \"./components/PostItem\";\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport MyInputOne from \"./components/UI/input/MyInputOne\";\nimport PostForm from \"./components/PostForm\";\nimport MySelectOne from \"./components/UI/select/MySelectOne\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [post, setPost] = useState([{\n    id: 1,\n    title: 'React 1',\n    description: 'BLearn react for 7 days'\n  }, {\n    id: 2,\n    title: 'React 2',\n    description: 'ALearn react for 7 days'\n  }, {\n    id: 3,\n    title: 'React 3',\n    description: 'CLearn react for 7 days'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const createPost = newPost => {\n    setPost([...post, newPost]);\n  }; //useMemo - хук (визивається тільки тоді коли одна з залежностей міняється)\n\n\n  const sortedPost = useMemo(() => {\n    if (selectedSort) {\n      return [...post].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n\n    return post;\n  }, [selectedSort, post]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPost.filter(post => post.title.toLowerCase().includes(searchQuery));\n  }, [searchQuery, sortedPost]); // получаємо пост з дочірнього елемента\n\n  const removePost = delPost => {\n    setPost(post.filter(p => p.id !== delPost.id));\n  };\n\n  const sortPost = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInputOne, {\n        placeholder: \"search\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySelectOne, {\n        value: selectedSort,\n        onChange: sortPost,\n        defaultValue: \"sort by\",\n        options: [{\n          value: 'title',\n          name: 'sort by title'\n        }, {\n          value: 'description',\n          name: 'sort by descr'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), post.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"No posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      post: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u0438 \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"NZKwg7FoHD+aI5XvMp23Xo0mmxo=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/App.js"],"names":["React","useMemo","useState","Counter","ClassCounter","PostItem","PostList","ButtonOne","MyInputOne","PostForm","MySelectOne","App","post","setPost","id","title","description","selectedSort","setSelectedSort","searchQuery","setSearchQuery","createPost","newPost","sortedPost","sort","a","b","localeCompare","sortedAndSearchedPosts","filter","toLowerCase","includes","removePost","delPost","p","sortPost","margin","e","target","value","name","length","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAC7B;AAACY,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,WAAW,EAAE;AAAvC,GAD6B,EAE7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,WAAW,EAAE;AAAvC,GAF6B,EAG7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,WAAW,EAAE;AAAvC,GAH6B,CAAD,CAAhC;AAMA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMmB,UAAU,GAAIC,OAAD,IAAa;AAC5BT,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUU,OAAV,CAAD,CAAP;AACH,GAFD,CAVW,CAcX;;;AACA,QAAMC,UAAU,GAAGtB,OAAO,CAAC,MAAM;AAC7B,QAAGgB,YAAH,EAAgB;AACZ,aAAO,CAAC,GAAGL,IAAJ,EAAUY,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACR,YAAD,CAAD,CAAgBU,aAAhB,CAA8BD,CAAC,CAACT,YAAD,CAA/B,CAAzB,CAAP;AACH;;AACD,WAAOL,IAAP;AACH,GALyB,EAKvB,CAACK,YAAD,EAAeL,IAAf,CALuB,CAA1B;AAOA,QAAMgB,sBAAsB,GAAG3B,OAAO,CAAC,MAAM;AACzC,WAAOsB,UAAU,CAACM,MAAX,CAAkBjB,IAAI,IAAIA,IAAI,CAACG,KAAL,CAAWe,WAAX,GAAyBC,QAAzB,CAAkCZ,WAAlC,CAA1B,CAAP;AACH,GAFqC,EAEnC,CAACA,WAAD,EAAcI,UAAd,CAFmC,CAAtC,CAtBW,CA0BX;;AACA,QAAMS,UAAU,GAAIC,OAAD,IAAa;AAC5BpB,IAAAA,OAAO,CAACD,IAAI,CAACiB,MAAL,CAAYK,CAAC,IAAIA,CAAC,CAACpB,EAAF,KAASmB,OAAO,CAACnB,EAAlC,CAAD,CAAP;AACH,GAFD;;AAGA,QAAMqB,QAAQ,GAAIX,IAAD,IAAU;AACvBN,IAAAA,eAAe,CAACM,IAAD,CAAf;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,KAAK,EAAE;AAACe,QAAAA,MAAM,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,WAAW,EAAC,QADhB;AAEI,QAAA,KAAK,EAAEjB,WAFX;AAGI,QAAA,QAAQ,EAAEkB,CAAC,IAAIjB,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,WAAD;AACI,QAAA,KAAK,EAAEtB,YADX;AAEI,QAAA,QAAQ,EAAEkB,QAFd;AAGI,QAAA,YAAY,EAAC,SAHjB;AAII,QAAA,OAAO,EAAE,CACL;AAACI,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SADK,EAEL;AAACD,UAAAA,KAAK,EAAE,aAAR;AAAuBC,UAAAA,IAAI,EAAE;AAA7B,SAFK;AAJb;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAoBK5B,IAAI,CAAC6B,MAAL,KAAgB,CAAhB,gBAEG;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,gBAMG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEV,UAAlB;AAA8B,MAAA,IAAI,EAAEJ,sBAApC;AAA4D,MAAA,KAAK,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,YA1BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAhEQjB,G;;KAAAA,G;AAgER;AAED,eAAeA,GAAf","sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport Counter from \"./components/Conter\"\nimport ClassCounter from \"./components/ClassCounter\";\nimport './styles/App.css';\nimport PostItem from \"./components/PostItem\";\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport MyInputOne from \"./components/UI/input/MyInputOne\";\nimport PostForm from \"./components/PostForm\";\nimport MySelectOne from \"./components/UI/select/MySelectOne\";\n\nfunction App() {\n    const [post, setPost] = useState([\n        {id: 1, title: 'React 1', description: 'BLearn react for 7 days'},\n        {id: 2, title: 'React 2', description: 'ALearn react for 7 days'},\n        {id: 3, title: 'React 3', description: 'CLearn react for 7 days'}\n    ])\n\n    const [selectedSort, setSelectedSort] = useState('')\n    const [searchQuery, setSearchQuery] = useState('')\n\n    const createPost = (newPost) => {\n        setPost([...post, newPost])\n    }\n\n    //useMemo - хук (визивається тільки тоді коли одна з залежностей міняється)\n    const sortedPost = useMemo(() => {\n        if(selectedSort){\n            return [...post].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n        }\n        return post;\n    }, [selectedSort, post])\n\n    const sortedAndSearchedPosts = useMemo(() => {\n        return sortedPost.filter(post => post.title.toLowerCase().includes(searchQuery))\n    }, [searchQuery, sortedPost])\n\n    // получаємо пост з дочірнього елемента\n    const removePost = (delPost) => {\n        setPost(post.filter(p => p.id !== delPost.id))\n    }\n    const sortPost = (sort) => {\n        setSelectedSort(sort)\n    }\n    return (\n        <div className=\"App\">\n            <PostForm create={createPost}/>\n            <hr style={{margin: '15px'}}/>\n            <div>\n                <MyInputOne\n                    placeholder='search'\n                    value={searchQuery}\n                    onChange={e => setSearchQuery(e.target.value)}\n                />\n                <MySelectOne\n                    value={selectedSort}\n                    onChange={sortPost}\n                    defaultValue=\"sort by\"\n                    options={[\n                        {value: 'title', name: 'sort by title'},\n                        {value: 'description', name: 'sort by descr'}\n                    ]}\n                />\n            </div>\n            {/*Умовна відмальовка*/}\n            {post.length === 0\n                ?\n                <h1 style={{textAlign: 'center'}}>\n                    No posts\n                </h1>\n                :\n                <PostList remove={removePost} post={sortedAndSearchedPosts} title='Пости про JS'/>\n            }\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}