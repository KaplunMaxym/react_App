{"ast":null,"code":"var _jsxFileName = \"/Users/maksimkaplun/\\u0432\\u0435\\u0431-\\u0440\\u043E\\u0437\\u0440\\u043E\\u0431\\u043A\\u0430/react/react_app/src/components/AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport { Navigate } from \"react-router\";\nimport { privateRoutes, publicRoutes } from \"../router/routes\";\nimport { AuthContext } from \"../context/index\";\nimport Loader from \"./UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    isAuth,\n    isLoading\n  } = useContext(AuthContext);\n\n  if (isLoading) {\n    /*#__PURE__*/\n    _jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAuth ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        element: /*#__PURE__*/_jsxDEV(route.component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 38\n        }, this)\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/posts\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n      children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        element: /*#__PURE__*/_jsxDEV(route.component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 38\n        }, this)\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"p11QuzApV7ohcvywyZxmt3feicw=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/components/AppRouter.jsx"],"names":["React","useContext","Route","Routes","Navigate","privateRoutes","publicRoutes","AuthContext","Loader","AppRouter","isAuth","isLoading","map","route","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,kBAA1C;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBV,UAAU,CAACM,WAAD,CAAtC;;AAEA,MAAII,SAAJ,EAAc;AACV;AAAA,YAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AACH;;AAED,sBACI;AAAA,cACKD,MAAM,gBAEH,QAAC,MAAD;AAAA,iBACKL,aAAa,CAACO,GAAd,CAAkBC,KAAK,iBACpB,QAAC,KAAD;AACI,QAAA,IAAI,EAAEA,KAAK,CAACC,IADhB;AAEI,QAAA,OAAO,eAAE,QAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAFb,SAGSD,KAAK,CAACC,IAHf;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAQI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAsB,UAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,gBAaH,QAAC,MAAD;AAAA,iBACKR,YAAY,CAACM,GAAb,CAAiBC,KAAK,iBACnB,QAAC,KAAD;AACI,QAAA,IAAI,EAAEA,KAAK,CAACC,IADhB;AAEI,QAAA,OAAO,eAAE,QAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAFb,SAGSD,KAAK,CAACC,IAHf;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAQI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAsB,UAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAnCD;;GAAML,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport {Navigate} from \"react-router\";\nimport {privateRoutes, publicRoutes} from \"../router/routes\";\nimport {AuthContext} from \"../context/index\";\nimport Loader from \"./UI/Loader/Loader\";\n\nconst AppRouter = () => {\n    const {isAuth, isLoading} = useContext(AuthContext);\n\n    if (isLoading){\n        <Loader/>\n    }\n\n    return (\n        <div>\n            {isAuth\n                ?\n                <Routes>\n                    {privateRoutes.map(route =>\n                        <Route\n                            path={route.path}\n                            element={<route.component/>}\n                            key={route.path}\n                        />\n                    )}\n                    <Route path=\"/*\" element={<Navigate to=\"/posts\" replace/>}/>\n                </Routes>\n                :\n                <Routes>\n                    {publicRoutes.map(route =>\n                        <Route\n                            path={route.path}\n                            element={<route.component/>}\n                            key={route.path}\n                        />\n                    )}\n                    <Route path=\"/*\" element={<Navigate to=\"/login\" replace/>}/>\n                </Routes>\n            }\n        </div>\n    );\n};\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}