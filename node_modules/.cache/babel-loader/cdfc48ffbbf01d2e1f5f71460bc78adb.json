{"ast":null,"code":"var _jsxFileName = \"/Users/maksimkaplun/\\u0432\\u0435\\u0431-\\u0440\\u043E\\u0437\\u0440\\u043E\\u0431\\u043A\\u0430/react/react_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport { usePosts } from \"./hooks/usePosts\";\nimport PostService from \"./components/API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [isPostsLoading, setIsPostsLoading] = useState(false);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const createPost = newPost => {\n    setPost([...post, newPost]);\n    setModal(false);\n  };\n\n  const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query); // получаємо пост з дочірнього елемента\n\n  const removePost = delPost => {\n    setPost(post.filter(p => p.id !== delPost.id));\n  };\n\n  async function fetchPosts() {\n    setIsPostsLoading(true);\n    setTimeout(async () => {\n      const posts = await PostService.getAll();\n      setPost(posts);\n      setIsPostsLoading(false);\n    }, 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonOne, {\n      onClick: () => setModal(true),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      post: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u0438 \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"+P9giwoCJu//DMQexaItCveWM7w=\", false, function () {\n  return [usePosts];\n});\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/App.js"],"names":["React","useEffect","useState","PostList","ButtonOne","PostForm","PostFilter","MyModal","usePosts","PostService","App","post","setPost","filter","setFilter","sort","query","modal","setModal","isPostsLoading","setIsPostsLoading","fetchPosts","createPost","newPost","sortedAndSearchedPosts","removePost","delPost","p","id","setTimeout","posts","getAll","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './styles/App.css';\nimport PostList from \"./components/PostList\";\nimport ButtonOne from \"./components/UI/button/ButtonOne\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport {usePosts} from \"./hooks/usePosts\";\nimport PostService from \"./components/API/PostService\";\n\nfunction App() {\n    const [post, setPost] = useState([])\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    const [modal, setModal] = useState(false)\n    const [isPostsLoading, setIsPostsLoading] = useState(false)\n\n    useEffect(() => {\n        fetchPosts()\n    }, [])\n\n    const createPost = (newPost) => {\n        setPost([...post, newPost])\n        setModal(false)\n    }\n    const sortedAndSearchedPosts = usePosts(post, filter.sort, filter.query)\n    // получаємо пост з дочірнього елемента\n    const removePost = (delPost) => {\n        setPost(post.filter(p => p.id !== delPost.id))\n    }\n\n    async function fetchPosts(){\n        setIsPostsLoading(true)\n        setTimeout(async () => {\n            const posts = await PostService.getAll();\n            setPost(posts)\n            setIsPostsLoading(false)\n        }, 1000)\n    }\n\n    return (\n        <div className=\"App\">\n            <ButtonOne onClick={() => setModal(true)}>\n                Create\n            </ButtonOne>\n            <MyModal visible={modal} setVisible = {setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px'}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {isPostsLoading\n                ? <h1>Loading...</h1>\n                : <PostList remove={removePost} post={sortedAndSearchedPosts} title='Пости про JS'/>\n            }\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}