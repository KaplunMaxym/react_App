{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nexport const useSortedPosts = (post, sort) => {\n  _s();\n\n  //useMemo - хук (визивається тільки тоді коли одна з залежностей міняється)\n  const sortedPost = useMemo(() => {\n    if (sort) {\n      return [...post].sort((a, b) => a[sort].localeCompare(b[sort]));\n    }\n\n    return post;\n  }, [sort, post]);\n  return sortedPost;\n};\n\n_s(useSortedPosts, \"kztGnBk7QlBaMxMv9rZfT5ZIynQ=\");\n\nexport const usePosts = (post, sort, query) => {\n  _s2();\n\n  const sortedPost = useSortedPosts(post, sort);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPost.filter(post => post.title.toLowerCase().includes(query));\n  }, [query, sortedPost]);\n  return sortedAndSearchedPosts;\n};\n\n_s2(usePosts, \"OHryPzh9Md+HpqnFlTRmhm/gUJY=\", false, function () {\n  return [useSortedPosts];\n});","map":{"version":3,"sources":["/Users/maksimkaplun/веб-розробка/react/react_app/src/hooks/usePosts.js"],"names":["useMemo","useSortedPosts","post","sort","sortedPost","a","b","localeCompare","usePosts","query","sortedAndSearchedPosts","filter","title","toLowerCase","includes"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAAA;;AAC1C;AACA,QAAMC,UAAU,GAAGJ,OAAO,CAAC,MAAM;AAC7B,QAAGG,IAAH,EAAQ;AACJ,aAAO,CAAC,GAAGD,IAAJ,EAAUC,IAAV,CAAe,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACF,IAAD,CAAD,CAAQI,aAAR,CAAsBD,CAAC,CAACH,IAAD,CAAvB,CAAzB,CAAP;AACH;;AACD,WAAOD,IAAP;AACH,GALyB,EAKvB,CAACC,IAAD,EAAOD,IAAP,CALuB,CAA1B;AAMA,SAAOE,UAAP;AACH,CATM;;GAAMH,c;;AAWb,OAAO,MAAMO,QAAQ,GAAG,CAACN,IAAD,EAAOC,IAAP,EAAaM,KAAb,KAAuB;AAAA;;AAC3C,QAAML,UAAU,GAAGH,cAAc,CAACC,IAAD,EAAOC,IAAP,CAAjC;AAEA,QAAMO,sBAAsB,GAAGV,OAAO,CAAC,MAAM;AACzC,WAAOI,UAAU,CAACO,MAAX,CAAkBT,IAAI,IAAIA,IAAI,CAACU,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCL,KAAlC,CAA1B,CAAP;AACH,GAFqC,EAEnC,CAACA,KAAD,EAAQL,UAAR,CAFmC,CAAtC;AAIA,SAAOM,sBAAP;AACH,CARM;;IAAMF,Q;UACUP,c","sourcesContent":["import {useMemo} from \"react\";\n\nexport const useSortedPosts = (post, sort) => {\n    //useMemo - хук (визивається тільки тоді коли одна з залежностей міняється)\n    const sortedPost = useMemo(() => {\n        if(sort){\n            return [...post].sort((a, b) => a[sort].localeCompare(b[sort]))\n        }\n        return post;\n    }, [sort, post])\n    return sortedPost;\n}\n\nexport const usePosts = (post, sort, query) => {\n    const sortedPost = useSortedPosts(post, sort);\n\n    const sortedAndSearchedPosts = useMemo(() => {\n        return sortedPost.filter(post => post.title.toLowerCase().includes(query))\n    }, [query, sortedPost])\n\n    return sortedAndSearchedPosts;\n}"]},"metadata":{},"sourceType":"module"}